name: Deploy to EKS
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12' 
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install protobuf==3.20.*
          pip install -U sagemaker  
          pip install -U datasets
      
      - name: train and deploy llm
        run: |
          python sagemeker/launch_training.py

      
      - name: Get Endpoint Name
        id: get_endpoint_name
        run: |
          ENDPOINT_NAME=$(cat endpoint_name.txt)
          echo "ENDPOINT_NAME=$ENDPOINT_NAME" >> $GITHUB_ENV
      
      # - name: Next Step - Use Endpoint Name
      #   run: |
      #     echo "Endpoint name is: ${{ env.ENDPOINT_NAME }}"

      - name: Build Docker image
        run: |
          docker build -t fastapi-app-new-image .
          docker tag fastapi-app-new-image:latest 038462775601.dkr.ecr.us-east-1.amazonaws.com/fastapi-app-repo:latest

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 038462775601.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Docker image to ECR
        run: |
          docker push 038462775601.dkr.ecr.us-east-1.amazonaws.com/fastapi-app-repo:latest

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name fastapi-cluster
      
      - name: Create or update K8s secret
        run: |
          kubectl delete secret my-secret --ignore-not-found
          kubectl create secret generic my-secret \
            --from-literal=ENDPOINT_NAME="${{ env.ENDPOINT_NAME }}"

      - name: Deploy to EKS
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml